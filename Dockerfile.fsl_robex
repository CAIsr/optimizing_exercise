# Generated by Neurodocker v0.3.2.
#
# Thank you for using Neurodocker. If you discover any issues
# or ways to improve this software, please submit an issue or
# pull request on our GitHub repository:
#     https://github.com/kaczmarj/neurodocker
#
# Timestamp: 2018-03-05 11:35:39

FROM ubuntu:xenial

ARG DEBIAN_FRONTEND=noninteractive

#----------------------------------------------------------
# Install common dependencies and create default entrypoint
#----------------------------------------------------------
ENV LANG="en_US.UTF-8" \
    LC_ALL="C.UTF-8" \
    ND_ENTRYPOINT="/neurodocker/startup.sh"
RUN apt-get update -qq && apt-get install -yq --no-install-recommends  \
    	apt-utils bzip2 ca-certificates curl locales unzip \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \
    && localedef --force --inputfile=en_US --charmap=UTF-8 C.UTF-8 \
    && chmod 777 /opt && chmod a+s /opt \
    && mkdir -p /neurodocker \
    && if [ ! -f "$ND_ENTRYPOINT" ]; then \
         echo '#!/usr/bin/env bash' >> $ND_ENTRYPOINT \
         && echo 'set +x' >> $ND_ENTRYPOINT \
         && echo 'if [ -z "$*" ]; then /usr/bin/env bash; else $*; fi' >> $ND_ENTRYPOINT; \
       fi \
    && chmod -R 777 /neurodocker && chmod a+s /neurodocker
ENTRYPOINT ["/neurodocker/startup.sh"]

COPY ["ROBEXv12.linux64.tar.gz", "/ROBEXv12.linux64.tar.gz"]

# User-defined instruction
RUN tar -xf /ROBEXv12.linux64.tar.gz

# User-defined instruction
RUN rm /ROBEXv12.linux64.tar.gz

# User-defined instruction
RUN ln -s /ROBEX/runROBEX.sh /bin

RUN apt-get update -qq \
    && apt-get install -y -q --no-install-recommends build-essential \
                                                     libgtk2.0-dev \
                                                     libgtk-3-dev \
                                                     libwebkitgtk-dev \
                                                     libwebkitgtk-3.0-dev \
                                                     libjpeg-turbo8-dev \
                                                     libtiff5-dev \
                                                     libsdl1.2-dev \
                                                     libgstreamer1.0-dev \
                                                     libgstreamer-plugins-base1.0-dev \
                                                     libnotify-dev \
                                                     freeglut3-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

#-----------------------------------------------------------
# Install FSL v5.0.10
# FSL is non-free. If you are considering commerical use
# of this Docker image, please consult the relevant license:
# https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/Licence
#-----------------------------------------------------------
RUN apt-get update -qq && apt-get install -yq --no-install-recommends bc dc libfontconfig1 libfreetype6 libgl1-mesa-dev libglu1-mesa-dev libgomp1 libice6 libxcursor1 libxft2 libxinerama1 libxrandr2 libxrender1 libxt6 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \
    && echo "Downloading FSL ..." \
    && curl -sSL --retry 5 https://fsl.fmrib.ox.ac.uk/fsldownloads/fsl-5.0.10-centos6_64.tar.gz \
    | tar zx -C /opt \
    && /bin/bash /opt/fsl/etc/fslconf/fslpython_install.sh -q -f /opt/fsl \
    && sed -i '$iecho Some packages in this Docker container are non-free' $ND_ENTRYPOINT \
    && sed -i '$iecho If you are considering commercial use of this container, please consult the relevant license:' $ND_ENTRYPOINT \
    && sed -i '$iecho https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/Licence' $ND_ENTRYPOINT \
    && sed -i '$isource $FSLDIR/etc/fslconf/fsl.sh' $ND_ENTRYPOINT
ENV FSLDIR=/opt/fsl \
    PATH=/opt/fsl/bin:$PATH

# Create new user: neuro
RUN useradd --no-user-group --create-home --shell /bin/bash neuro
USER neuro

WORKDIR /home/neuro

#--------------------------------------
# Save container specifications to JSON
#--------------------------------------
RUN echo '{ \
    \n  "pkg_manager": "apt", \
    \n  "check_urls": false, \
    \n  "instructions": [ \
    \n    [ \
    \n      "base", \
    \n      "ubuntu:xenial" \
    \n    ], \
    \n    [ \
    \n      "copy", \
    \n      [ \
    \n        "ROBEXv12.linux64.tar.gz", \
    \n        "/ROBEXv12.linux64.tar.gz" \
    \n      ] \
    \n    ], \
    \n    [ \
    \n      "run", \
    \n      "tar -xf /ROBEXv12.linux64.tar.gz" \
    \n    ], \
    \n    [ \
    \n      "run", \
    \n      "rm /ROBEXv12.linux64.tar.gz" \
    \n    ], \
    \n    [ \
    \n      "run", \
    \n      "ln -s /ROBEX/runROBEX.sh /bin" \
    \n    ], \
    \n    [ \
    \n      "install", \
    \n      [ \
    \n        "build-essential", \
    \n        "libgtk2.0-dev", \
    \n        "libgtk-3-dev", \
    \n        "libwebkitgtk-dev", \
    \n        "libwebkitgtk-3.0-dev", \
    \n        "libjpeg-turbo8-dev", \
    \n        "libtiff5-dev", \
    \n        "libsdl1.2-dev", \
    \n        "libgstreamer1.0-dev", \
    \n        "libgstreamer-plugins-base1.0-dev", \
    \n        "libnotify-dev", \
    \n        "freeglut3-dev" \
    \n      ] \
    \n    ], \
    \n    [ \
    \n      "fsl", \
    \n      { \
    \n        "version": "5.0.10" \
    \n      } \
    \n    ], \
    \n    [ \
    \n      "user", \
    \n      "neuro" \
    \n    ], \
    \n    [ \
    \n      "workdir", \
    \n      "/home/neuro" \
    \n    ] \
    \n  ], \
    \n  "generation_timestamp": "2018-03-05 11:35:39", \
    \n  "neurodocker_version": "0.3.2" \
    \n}' > /neurodocker/neurodocker_specs.json
